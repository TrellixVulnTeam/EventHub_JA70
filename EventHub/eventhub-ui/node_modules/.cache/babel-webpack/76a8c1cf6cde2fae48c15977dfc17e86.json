{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let EventService = /*#__PURE__*/(() => {\n  class EventService {\n    constructor(http) {\n      this.instantarray = new Subject();\n      this.Events = [];\n      this.Category = [];\n      this.http = http;\n    }\n\n    saveImage(token, image, eventId) {\n      const headers = new HttpHeaders().set('Authorization', \"Bearer \" + token);\n      return this.http.post('http://localhost:9191/event/image/' + eventId, image, {\n        'headers': headers\n      });\n    }\n\n    getEventsByCategory(category) {\n      return this.http.get('http://localhost:9191/event/category/' + category);\n    }\n\n    register(data, token) {\n      console.log(token);\n      const headers = new HttpHeaders().set('Authorization', \"Bearer \" + token);\n      return this.http.post('http://localhost:9191/event/addevent', data, {\n        'headers': headers\n      });\n    }\n\n    findAll() {\n      return this.http.get('http://localhost:9191/event/allevents');\n    }\n\n    getCategory() {\n      return this.http.get('http://localhost:9191/event/categories');\n    }\n\n    findEventsbyUser(id) {\n      return this.http.get('http://localhost:9191/event/getevents/' + id);\n    }\n\n    getItems() {\n      console.log(this.Events);\n\n      for (let a of this.Events) console.log(a);\n\n      return this.Events;\n    }\n\n    getCategoryItems() {\n      console.log(this.Category);\n\n      for (let a of this.Category) console.log(a);\n\n      return this.Category;\n    }\n\n    enroll(data, token) {\n      const headers = new HttpHeaders().set('Authorization', \"Bearer \" + token);\n      return this.http.post('http://localhost:9191/event/enroll', data, {\n        'headers': headers\n      });\n    }\n\n  }\n\n  EventService.ɵfac = function EventService_Factory(t) {\n    return new (t || EventService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  EventService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EventService,\n    factory: EventService.ɵfac,\n    providedIn: 'root'\n  });\n  return EventService;\n})();","map":null,"metadata":{},"sourceType":"module"}